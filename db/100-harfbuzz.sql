

-- \set ECHO queries

/* ###################################################################################################### */
\ir './_trm.sql'
-- \ir './set-signal-color.sql'
-- \ir './test-begin.sql'
-- \pset pager on
\timing off
\set filename intershop/100-harfbuzz.sql
\set signal :green

-- ---------------------------------------------------------------------------------------------------------
\echo :signal ———{ :filename 1 }———:reset
drop schema if exists HARFBUZZ cascade;
create schema HARFBUZZ;

-- ---------------------------------------------------------------------------------------------------------
\echo :signal ———{ :filename 1 }———:reset
create table HARFBUZZ.x (
    nr          integer generated by default as identity,
    upem        jsonb,
    gid         jsonb,
    cluster     jsonb,
    x_advance   jsonb,
  primary key ( nr ) );

-- ---------------------------------------------------------------------------------------------------------
\echo :signal ———{ :filename 1 }———:reset
set role dba;
create function HARFBUZZ._positions_from_text( _text text )
  returns jsonb strict immutable language plpython3u as $$
  plpy.execute( 'select U.py_init()' ); ctx = GD[ 'ctx' ]
  import os
  import sys
  import json as JSON
  os.chdir( sys.path[ 0 ] )
  sys.path.insert( 1, sys.path[ 0 ] + '/site-packages' )
  # sys.path.insert( 1, sys.path[ 0 ] + '/site-packages/uharfbuzz' )
  # ctx.log( '^44498^', os.getcwd() )
  import myharfbuzz as MHB
  MHB.provide_uharfbuzz( ctx )
  R = MHB.demo_uharfbuzz( ctx, _text )
  return JSON.dumps( R )
  $$;
reset role;

-- ---------------------------------------------------------------------------------------------------------
create function HARFBUZZ.positions_from_text( ¶text text )
  returns setof HARFBUZZ.x strict immutable language sql as $$
    select * from jsonb_populate_recordset( null::HARFBUZZ.x, HARFBUZZ._positions_from_text( ¶text ) ); $$;

-- ---------------------------------------------------------------------------------------------------------
\echo :signal ———{ :filename 1 }———:reset
set role dba;
create function HARFBUZZ.f() returns void strict immutable language plpython3u as $$
  plpy.execute( 'select U.py_init()' ); ctx = GD[ 'ctx' ]
  import myharfbuzz as MHB
  MHB.f( ctx )
  $$;
reset role;

-- ---------------------------------------------------------------------------------------------------------
\echo :signal ———{ :filename 1 }———:reset
-- select * from HARFBUZZ.positions_from_text( e'这个东西' );
-- select * from HARFBUZZ.positions_from_text( e'affix' );
-- -- select * from HARFBUZZ.positions_from_text( e'xحرف‌بازx' );
-- select * from HARFBUZZ.positions_from_text( e'حرف‌بازx' );
-- -- select * from jsonb_populate_recordset( null::HARFBUZZ.x, HARFBUZZ.positions_from_text( 42 ) );
-- select HARFBUZZ.f();
select IPC.rpc( '^hyphenate', '"some text to be hyphenated"' );

/* ###################################################################################################### */
\echo :red ———{ :filename 3 }———:reset
\quit






