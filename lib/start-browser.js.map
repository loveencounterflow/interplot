{
  "version": 3,
  "file": "start-browser.js",
  "sourceRoot": "..",
  "sources": [
    "src/start-browser.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERPLOT/DEMO-PUPPETEER'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\nPATH                      = require 'path'\nFS                        = require 'fs'\n{ jr, }                   = CND\nassign                    = Object.assign\njoin_path                 = ( P... ) -> PATH.resolve PATH.join P...\n#...........................................................................................................\ntypes                     = require './types'\n{ isa\n  validate\n  cast\n  type_of }               = types\n#...........................................................................................................\nafter                     = ( dts, f ) -> setTimeout f, dts * 1000\nsleep                     = ( dts ) -> new Promise ( done ) -> after dts, done\npage_html_path            = PATH.resolve PATH.join __dirname, '../../public/main.html'\nPUPPETEER                 = require 'puppeteer'\n\n#-----------------------------------------------------------------------------------------------------------\nsettings =\n  has_error:    false\n  close:\n    on_finish:  true\n    on_error:   false\n  puppeteer:\n    headless:           false\n    # defaultViweport:\n    #   deviceScaleFactor:  0.5\n    args: [\n      '--disable-infobars' # hide 'Chrome is being controlled by ...'\n      '--no-first-run'\n      # '--incognito'\n      # process.env.NODE_ENV === \"production\" ? \"--kiosk\" : null\n      '--allow-file-access-from-files'\n      '--no-sandbox'\n      '--disable-setuid-sandbox'\n      # '--start-fullscreen'\n      '--start-maximized'\n      ]\n  screenshot:\n    path:             PATH.resolve __dirname, '../.cache/chart.png'\n    omitBackground:   false\n    # fullPage:         true\n    fullPage:         false\n    type:             'png'\n    # clip:\n    #   x:                0\n    #   y:                0\n    #   width:            500\n    #   height:           500\n\n#-----------------------------------------------------------------------------------------------------------\necho_browser_console = ( c ) =>\n  unless c._type in [ 'log', ]\n    whisper ( rpr c )[ .. 500 ]\n  if c._type is 'error'\n    settings.has_error = true\n    warn 'µ37763', 'console:', c._text\n    if ( settings.close?.on_error ? false )\n      after 3, => process.exit 1\n    # throw new Error c._text\n  #.........................................................................................................\n  else\n    info 'µ37763', 'console:', c._text\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\nget_page = ( browser ) ->\n  if isa.empty ( pages = await browser.pages() )\n    urge \"µ29923-2 new page\";           R = await browser.newPage()\n  else\n    urge \"µ29923-2 use existing page\";  R = pages[ 0 ]\n  return R\n\n#-----------------------------------------------------------------------------------------------------------\ntake_screenshot = ( page ) ->\n  screenshot_written = false\n  if settings.screenshot.fullPage\n    urge \"µ29923-6 take screenshot\";    await page.screenshot settings.screenshot\n    screenshot_written = true\n  else\n    urge \"µ29923-5 page goto\";          chart_dom = await page.$ '#chart'\n    if chart_dom?\n      urge \"µ29923-6 take screenshot\";    await chart_dom.screenshot settings.screenshot\n      screenshot_written = true\n    else\n      warn \"unable to take screenshot: DOM element not found\"\n  if screenshot_written\n    help \"output written to #{PATH.relative process.cwd(), settings.screenshot.path}\"\n  return null\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_2 = ->\n  # Set up browser and page.\n  urge \"µ29923-1 launching browser\";  browser = await PUPPETEER.launch settings.puppeteer\n  page = await get_page browser\n  page.setViewport { width: 1200, height: 1200, }\n  page.on 'error', ( error ) => throw error\n  page.on 'console', echo_browser_console\n  urge \"µ29923-3 page goto\";          await page.goto 'file:///home/flow/io/interplot/public/main.html'\n  # urge \"µ29923-3 page goto\";          await page.goto 'https://de.wikipedia.org/wiki/Berlin'\n  # urge \"µ29923-3 page goto\";          await page.goto 'http://google.com'\n  urge \"µ29923-4 page goto\";          await page.waitForSelector '#chart'\n  urge \"µ29923-4 page goto\";          await page.waitForSelector '#chart_ready', { timeout: 600e3, }\n  await take_screenshot page\n  #.........................................................................................................\n  if ( settings.close?auto ? false ) and ( not settings.has_error ? false )\n    urge \"µ29923-8 close\"; browser.close()\n  urge \"µ29923-9 done\"\n\n\n\n############################################################################################################\nunless module.parent?\n  do =>\n    # await sleep 5\n    await demo_2()\n    help 'ok'\n\n\n\n"
  ]
}