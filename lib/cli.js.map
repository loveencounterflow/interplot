{
  "version": 3,
  "file": "cli.js",
  "sourceRoot": "..",
  "sources": [
    "src/cli.coffee"
  ],
  "names": [],
  "mappings": ";AACA;AAAA,IAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,KAAA,EAAA,MAAA,EAAA,KAAA,EAAA,IAAA,EAAA,KAAA,EAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA;;;AAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;AAC5B,GAAA,GAA4B,GAAG,CAAC;;AAChC,KAAA,GAA4B;;AAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;AAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;AAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;AAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;AAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;AAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;AAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;AAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;AAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAd5B;;;AAgBA,EAAA,GAA4B,OAAA,CAAQ,IAAR;;AAC5B,IAAA,GAA4B,OAAA,CAAQ,MAAR;;AAC5B,CAAA,CAAE,MAAF,EACE,EADF,CAAA,GAC4B,GAD5B,EAlBA;;;;;;;;AA0BA,KAAA,GAA4B,OAAA,CAAQ,SAAR;;AAC5B,CAAA,CAAE,GAAF,EACE,QADF,EAEE,IAFF,EAGE,QAHF,EAIE,OAJF,CAAA,GAI4B,KAJ5B,EA3BA;;;;;;AAoCA,IAAC,CAAA,GAAD,GAAO,QAAA,CAAA,CAAA;SAAG,IAAI,OAAJ,CAAY,CAAE,IAAF,CAAA,GAAA;AACtB,QAAA,SAAA,EAAA,GAAA,EAAA;IAAE,SAAA,GAAc,OAAA,CAAQ,aAAR;IACd,GAAA,GAAc,OAAA,CAAQ,WAAR;IACd,WAAA,GAAc,MAFhB;;IAIE,GACE,CAAC,IADH,CACY,WADZ,CAEE,CAAC,OAFH,CAEY,CAAE,OAAA,CAAQ,iBAAR,CAAF,CAA6B,CAAC,OAF1C,EAJF;;;;;;;;;;;;;;IAoBE,GACE,CAAC,OADH,CACW,8DADX,CAEE,CAAC,WAFH,CAEe,0BAFf,CAGE,CAAC,MAHH,CAGU,CAAE,aAAF,EAAiB,WAAjB,EAA8B,UAA9B,EAA0C,CAA1C,CAAA,GAAA;AACZ,UAAA,IAAA,EAAA;MAAM,WAAA,GAAc;MACd,KAAO,GAAG,CAAC,uBAAJ,CAA4B,aAA5B,CAAP;QACE,IAAA,CAAK,CAAA,2BAAA,CAAA,CAA8B,GAAA,CAAI,aAAJ,CAA9B,CAAA,CAAL;QACA,IAAA,CAAK,8BAAL;QACA,IAAA,CAAK;;AAAE;UAAA,KAAA,iBAAA;yBAAA,GAAA,CAAI,IAAJ;UAAA,CAAA;;YAAF,CAAkC,CAAC,IAAnC,CAAwC,IAAxC,CAAL;QACA,OAAO,CAAC,IAAR,CAAa,CAAb,EAJF;;MAKA,IAAA,GAAO,SAAS,CAAE,aAAF,CAAT,CAA2B,GAAA,UAA3B;MACP,IAAG,WAAA,KAAe,GAAlB;QACE,IAAA,CAAK,IAAL,EADF;OAAA,MAAA;QAGE,EAAE,CAAC,aAAH,CAAiB,WAAjB,EAA8B,IAA9B;QACA,IAAA,CAAK,CAAA,kBAAA,CAAA,CAAqB,WAArB,CAAA,CAAL,EAJF;;aAKA,IAAA,CAAA;IAbM,CAHV,EApBF;;IAsCE,GAAG,CAAC,KAAJ,CAAU,OAAO,CAAC,IAAlB;IACA,KAAO,WAAP;MACE,GAAG,CAAC,UAAJ,CAAe,QAAA,CAAE,OAAF,CAAA;eAAe,CAAE,GAAG,CAAC,MAAJ,CAAW,OAAX,CAAF,CAAA,GAAyB,GAAG,CAAC,IAAJ,CAAS,CAAA;;gDAAA,CAAT;MAAxC,CAAf,EADF;KAvCF;;AA6CE,WAAO;EA9Ca,CAAZ;AAAH,EApCP;;;AAsFA,IAAG,MAAA,KAAU,OAAO,CAAC,IAArB;EAAkC,CAAA,KAAA,CAAA,CAAA,GAAA;WAChC,CAAA,MAAM,IAAC,CAAA,GAAD,CAAA,CAAN;EADgC,CAAA,IAAlC",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERPLOT/CLI'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nFS                        = require 'fs'\nPATH                      = require 'path'\n{ assign\n  jr }                    = CND\n# { walk_cids_in_cid_range\n#   cwd_abspath\n#   cwd_relpath\n#   here_abspath\n#   _drop_extension\n#   project_abspath }       = require './helpers'\ntypes                     = require './types'\n{ isa\n  validate\n  cast\n  defaults\n  type_of }               = types\n#...........................................................................................................\n# require                   './exception-handler'\n\n#-----------------------------------------------------------------------------------------------------------\n@cli = -> new Promise ( done ) =>\n  TEMPLATES   = require './templates'\n  app         = require 'commander'\n  has_command = false\n  #.........................................................................................................\n  app\n    .name     'InterPlot'\n    .version  ( require '../package.json' ).version\n  # #.........................................................................................................\n  # app\n  #   .name     FONTMIRROR.CFG.name\n  #   .version  FONTMIRROR.CFG.version\n  # #.........................................................................................................\n  # app\n  #   .command 'cfg'\n  #   .description \"show current configuration values\"\n  #   .action ( source_path, d ) =>\n  #     has_command = true\n  #     FONTMIRROR.CFG.show_cfg()\n  #     done()\n  #.........................................................................................................\n  app\n    .command 'write-template <template_name> <target_path> [parameters...]'\n    .description \"Write a template to HTML\"\n    .action ( template_name, target_path, parameters, d ) =>\n      has_command = true\n      unless isa.interplot_template_name template_name\n        warn \"not a valid template name: #{rpr template_name}\"\n        help \"valid template names include\"\n        help ( rpr name for name of TEMPLATES ).join ', '\n        process.exit 1\n      html = TEMPLATES[ template_name ] parameters...\n      if target_path is '%'\n        echo html\n      else\n        FS.writeFileSync target_path, html\n        help \"output written to #{target_path}\"\n      done()\n  #.........................................................................................................\n  app.parse process.argv\n  unless has_command\n    app.outputHelp ( message ) -> ( CND.orange message ) + CND.blue \"\"\"\n\n      use % (percent sign) to write to stdout, may add parameters after that, ex.:\n      node lib/cli.js write-template layout % foobar\\n\"\"\"\n  # debug '^33376^', ( k for k of app).sort().join ', '\n  return null\n\n\n############################################################################################################\nif module is require.main then do =>\n  await @cli()\n\n\n"
  ]
}