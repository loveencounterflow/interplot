// Generated by CoffeeScript 2.3.2
(function() {
  //-----------------------------------------------------------------------------------------------------------
  var after, demo_d3, demo_taucharts, log;

  after = function(dts, f) {
    return setTimeout(f, dts * 1000);
  };

  log = console.log;

  //-----------------------------------------------------------------------------------------------------------
  demo_d3 = function() {
    var height, margin, path, svg, width;
    // set the dimensions and margins of the graph
    margin = {
      top: 20,
      right: 30,
      bottom: 40,
      left: 90
    };
    width = 460 - margin.left - margin.right;
    height = 400 - margin.top - margin.bottom;
    // append the svg object to the body of the page
    svg = d3.select('#chart').append('svg').attr('width', width + margin.left + margin.right).attr('height', height + margin.top + margin.bottom).append('g').attr('transform', `translate( ${margin.left}, ${margin.top}  )`);
    path = 'file:///home/flow/io/interplot/public/7_OneCatOneNum_header.csv';
    d3.csv(path, function(data) {
      var y;
      window.x = d3.scaleLinear().domain([0, 13000]).range([0, width]);
      // Add X axis
      svg.append('g').attr('transform', `translate( 0, ${height} )`).call(d3.axisBottom(x)).selectAll('text').attr('transform', "translate(-10,0)rotate(-45)").style('text-anchor', 'end');
      // Y axis
      y = d3.scaleBand().range([0, height]).domain(data.map(function(d) {
        return d.Country;
      })).padding(0.1);
      svg.append('g').call(d3.axisLeft(y));
      //Bars
      return svg.selectAll('myRect').data(data).enter().append('rect').attr('x', x(0)).attr('y', function(d) {
        return y(d.Country);
      }).attr('width', function(d) {
        return x(d.Value);
      }).attr('height', y.bandwidth()).attr('fill', '#69b333');
    });
    return null;
  };

  //-----------------------------------------------------------------------------------------------------------
  demo_taucharts = function() {
    null;
    ($('#chart')).width(500);
    ($('#chart')).height(500);
    
  var defData = [{
      "team": "d",
      "cycleTime": 1,
      "effort": 1,
      "count": 1,
      "priority": "low"
    }, {
      "team": "d",
      "cycleTime": 2,
      "effort": 2,
      "count": 5,
      "priority": "low"
    }, {
      "team": "d",
      "cycleTime": 3,
      "effort": 3,
      "count": 8,
      "priority": "medium"
    }, {
      "team": "d",
      "cycleTime": 4,
      "effort": 4,
      "count": 3,
      "priority": "high"
    }, {
      "team": "l",
      "cycleTime": 2,
      "effort": 1,
      "count": 1,
      "priority": "low"
    }, {
      "team": "l",
      "cycleTime": 3,
      "effort": 2,
      "count": 5,
      "priority": "low"
    }, {
      "team": "l",
      "cycleTime": 4,
      "effort": 3,
      "count": 8,
      "priority": "medium"
    }, {
      "team": "l",
      "cycleTime": 5,
      "effort": 4,
      "count": 3,
      "priority": "high"
    },
    {
      "team": "k",
      "cycleTime": 2,
      "effort": 4,
      "count": 1,
      "priority": "low"
    }, {
      "team": "k",
      "cycleTime": 3,
      "effort": 5,
      "count": 5,
      "priority": "low"
    }, {
      "team": "k",
      "cycleTime": 4,
      "effort": 6,
      "count": 8,
      "priority": "medium"
    }, {
      "team": "k",
      "cycleTime": 5,
      "effort": 8,
      "count": 3,
      "priority": "high"
    }
  ];
  var chart = new Taucharts.Chart({
    data: defData,
    type: 'scatterplot',
    x: 'cycleTime',
    y: 'effort',
    color: 'team',
    size: 'count',
    plugins: [Taucharts.api.plugins.get('tooltip')(), Taucharts.api.plugins.get('legend')()]
  });
  chart.renderTo('#chart');
  ;
    return null;
  };

  //###########################################################################################################
  demo_d3();

  // demo_taucharts()

}).call(this);

//# sourceMappingURL=ops.js.map
