{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/ops-microdom.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n'use strict'\n\nmisfit                = Symbol 'misfit'\n_types                = µ.TYPES.export()\nV                     = _types.validate\n{ isa }               = _types\n\n#===========================================================================================================\nname_of_match_method  = do ->\n  element = document.createElement 'div'\n  for name in [ 'matches', 'matchesSelector', 'msMatchesSelector', \\\n    'mozMatchesSelector', 'webkitMatchesSelector', 'oMatchesSelector', ]\n    return name if element[ name ]?\n\n#===========================================================================================================\nµ.TYPES.declare 'element',  ( x ) -> x instanceof Element\nµ.TYPES.declare 'delement', ( x ) -> x is document or x instanceof Element\n\n\n#===========================================================================================================\nclass Micro_dom # extends Multimix\n  ### inspired by http://youmightnotneedjquery.com\n  and https://blog.garstasio.com/you-dont-need-jquery ###\n\n  #-----------------------------------------------------------------------------------------------------------\n  ready: ( f ) ->\n    # thx to https://stackoverflow.com/a/7053197/7568091\n    # function r(f){/in/.test(document.readyState)?setTimeout(r,9,f):f()}\n    V.function f\n    return ( setTimeout ( => @ready f ), 9 ) if /in/.test document.readyState\n    return f()\n\n  #-----------------------------------------------------------------------------------------------------------\n  select:     ( selector, fallback = misfit ) -> @select_from     document, selector, fallback\n  select_all: ( selector                    ) -> @select_all_from document, selector\n\n  #-----------------------------------------------------------------------------------------------------------\n  select_from: ( element, selector, fallback = misfit ) ->\n    V.delement element\n    V.nonempty_text selector\n    R = element.querySelector selector\n    if not R?\n      throw new Error \"^µDOM/select@7758^ no such element: #{µ.rpr selector}\" if fallback is misfit\n      return fallback\n    return R\n\n  #-----------------------------------------------------------------------------------------------------------\n  select_all_from: ( element, selector ) ->\n    V.delement element\n    V.nonempty_text selector\n    Array.from element.querySelectorAll selector\n\n  #-----------------------------------------------------------------------------------------------------------\n  select_id:  ( id ) ->\n    V.nonempty_text id\n    return document.getElementById id\n\n  #-----------------------------------------------------------------------------------------------------------\n  matches_selector: ( element, selector ) ->\n    V.nonempty_text selector\n    V.element element\n    return element[ name_of_match_method ] selector\n\n  #-----------------------------------------------------------------------------------------------------------\n  get:              ( element, name         ) -> V.element element; element.getAttribute name\n  set:              ( element, name, value  ) -> V.element element; element.setAttribute name, value\n  #-----------------------------------------------------------------------------------------------------------\n  get_classes:      ( element               ) -> V.element element; element.classList\n  add_class:        ( element, name         ) -> V.element element; element.classList.add      name\n  has_class:        ( element, name         ) -> V.element element; element.classList.contains name\n  remove_class:     ( element, name         ) -> V.element element; element.classList.remove   name\n  toggle_class:     ( element, name         ) -> V.element element; element.classList.toggle   name\n  #-----------------------------------------------------------------------------------------------------------\n  hide:             ( element               ) -> V.element element; element.style.display = 'none'\n  show:             ( element               ) -> V.element element; element.style.display = ''\n  #-----------------------------------------------------------------------------------------------------------\n  get_inner_html:   ( element               ) -> V.element element; element.innerHTML\n  get_outer_html:   ( element               ) -> V.element element; element.outerHTML\n  #-----------------------------------------------------------------------------------------------------------\n  get_live_styles:  ( element               ) -> getComputedStyle element ### validation done by method ###\n  get_style_rule:   ( element, name         ) -> ( getComputedStyle element )[ name ] ### validation done by method ###\n\n  #-----------------------------------------------------------------------------------------------------------\n  parse_html: ( html ) ->\n    R = document.implementation.createHTMLDocument()\n    R.body.innerHTML = html\n    return R.body.children\n\n  #-----------------------------------------------------------------------------------------------------------\n  new_element: ( xname, P... ) ->\n    ### TAINT analyze xname (a la `div#id42.foo.bar`) as done in Intertext.Cupofhtml ###\n    R           = document.createElement xname\n    attributes  = {}\n    text        = null\n    for p in P\n      if isa.text p\n        text = p\n        continue\n      attributes = Object.assign attributes, p ### TAINT check type? ###\n    R.textContent = text if text?\n    R.setAttribute k, v for k, v of attributes\n    return R\n\n( globalThis.µ ?= {} ).DOM = new Micro_dom()\n\n###\n\nhttps://stackoverflow.com/a/117988/7568091\n\ninnerHTML is remarkably fast, and in many cases you will get the best results just setting that (I would just use append).\n\nHowever, if there is much already in \"mydiv\" then you are forcing the browser to parse and render all of that content again (everything that was there before, plus all of your new content). You can avoid this by appending a document fragment onto \"mydiv\" instead:\n\nvar frag = document.createDocumentFragment();\nfrag.innerHTML = html;\n$(\"#mydiv\").append(frag);\nIn this way, only your new content gets parsed (unavoidable) and the existing content does not.\n\nEDIT: My bad... I've discovered that innerHTML isn't well supported on document fragments. You can use the same technique with any node type. For your example, you could create the root table node and insert the innerHTML into that:\n\nvar frag = document.createElement('table');\nfrag.innerHTML = tableInnerHtml;\n$(\"#mydiv\").append(frag);\n\n\n###\n"
  ]
}