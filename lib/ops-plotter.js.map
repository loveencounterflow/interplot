{
  "version": 3,
  "file": "ops-plotter.js",
  "sourceRoot": "..",
  "sources": [
    "src/ops-plotter.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\nprovide_plotter = ->\n\n  #-----------------------------------------------------------------------------------------------------------\n  demo_d3 = ->\n    # set the dimensions and margins of the graph\n    margin  = { top: 20, right: 30, bottom: 40, left: 90, }\n    width   = 460 - margin.left - margin.right\n    height  = 400 - margin.top - margin.bottom\n\n    # append the svg object to the body of the page\n    svg = d3.select '#chart'\n      .append 'svg'\n        .attr 'width', width + margin.left + margin.right\n        .attr 'height', height + margin.top + margin.bottom\n      .append 'g'\n        .attr 'transform', \"translate( #{margin.left}, #{margin.top}  )\"\n\n    path = 'file:///home/flow/io/interplot/public/7_OneCatOneNum_header.csv'\n    d3.csv path, ( data ) ->\n      window.x = d3.scaleLinear()\n        .domain   [ 0, 13000, ]\n        .range    [ 0, width, ]\n\n      # Add X axis\n      svg.append 'g'\n        .attr 'transform', \"translate( 0, #{height} )\"\n        .call d3.axisBottom x\n        .selectAll 'text'\n        .attr 'transform', \"translate(-10,0)rotate(-45)\"\n        .style 'text-anchor', 'end'\n\n      # Y axis\n      y = d3.scaleBand()\n        .range [ 0, height, ]\n        .domain data.map ( d ) -> d.Country\n        .padding 0.1\n\n      svg.append 'g'\n        .call d3.axisLeft y\n\n      #Bars\n      svg.selectAll 'myRect'\n        .data data\n        .enter()\n        .append 'rect'\n        .attr 'x',      x 0\n        .attr 'y',      ( d ) -> y d.Country\n        .attr 'width',  ( d ) -> x d.Value\n        .attr 'height', y.bandwidth()\n        .attr 'fill',   '#69b333'\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  demo_plotly_1 = ->\n    #.........................................................................................................\n    trace_1 =\n      name:         'trace_1'\n      x:            [ 0, 1, 2, 3, 4, 5, ]\n      y:            [ 20, 1, 2, 4, 8, 16, ]\n      mode:         'lines+markers'\n      line:\n        shape:  'spline'\n    trace_2 =\n      name:         'trace_2'\n      x:            [ 0, 1, 2, 3, 4, 5, ]\n      y:            [ 20, 1, 2, 4, 8, 16, ]\n      type:         'bar'\n      orientation:  'h'\n    trace_3 =\n      name:         'trace_3'\n      x:            [ 0, 1, 2, 3, 4, 5, ]\n      y:            [ 20, 1, 2, 4, 8, 16, ]\n      type:         'bar'\n      orientation:  'v'\n    #.........................................................................................................\n    data    = [ trace_1, trace_3, trace_2, ]\n    #.........................................................................................................\n    layout  =\n      title:        \"Just A Line\"\n      showlegend:   true\n      #.......................................................................................................\n      # margin:\n      #   t:          10\n      #.......................................................................................................\n      font:\n        size:       20\n        family:     'Lobster'\n    #.........................................................................................................\n    config =\n      displayModeBar:   true\n      staticPlot:       false\n      scrollZoom:       true\n      showLink:         true\n      responsive:       true\n      toImageButtonOptions:\n        format:           'png'\n        filename:         'custom_image',\n        height:           1200,\n        width:            1200,\n        scale:            2\n    #.........................................................................................................\n    plot data, layout, config\n    return null\n\n  #-----------------------------------------------------------------------------------------------------------\n  plot = ( data, layout = null, config = null ) ->\n    t0 = Date.now(); log 'µ3332-1', \"before plot #{t0}\"\n    Plotly.plot 'chart', data, layout, config\n    t1 = Date.now(); log 'µ3332-2', \"after plot #{t1}\"\n    log 'µ3332-3', \"plotting took #{( t1 - t0 ) / 1000}s\"\n    signal_plot_ready()\n\n  #-----------------------------------------------------------------------------------------------------------\n  signal_plot_ready = -> ( jQuery 'body' ).append ( jQuery \"<div id=chart_ready></\" )\n\n  #-----------------------------------------------------------------------------------------------------------\n  demo_plotly_ternary = ->\n    #.........................................................................................................\n    make_axis = ( title, tickangle ) ->\n      R =\n        title:        title\n        titlefont:    { size: 20, }\n        tickangle:    tickangle\n        tickfont:     { size: 15, }\n        tickcolor:    'rgba(0,0,0,0)'\n        ticklen:      5\n        showline:     true\n        showgrid:     true\n    #.........................................................................................................\n    rawData = [\n        { journalist: 75, developer: 25,  designer: 0,  label: 'point 1',   }\n        { journalist: 70, developer: 10,  designer: 20, label: 'point 2',   }\n        { journalist: 75, developer: 20,  designer: 5,  label: 'point 3',   }\n        { journalist: 5,  developer: 60,  designer: 35, label: 'point 4',   }\n        { journalist: 10, developer: 80,  designer: 10, label: 'point 5',   }\n        { journalist: 10, developer: 90,  designer: 0,  label: 'point 6',   }\n        { journalist: 20, developer: 70,  designer: 10, label: 'point 7',   }\n        { journalist: 10, developer: 20,  designer: 70, label: 'point 8',   }\n        { journalist: 15, developer: 5,   designer: 80, label: 'point 9',   }\n        { journalist: 10, developer: 10,  designer: 80, label: 'point 10',  }\n        { journalist: 20, developer: 10,  designer: 70, label: 'point 11',  }\n        { journalist: 50, developer: 50,  designer: 50, label: 'center',  }\n        { journalist: 50, developer: 50,  designer: 0, label: 'jourdev',  }\n        { journalist: 50, developer: 50,  designer: 10, label: 'jourdevdes10',  }\n        { journalist: 100, developer: 0,  designer: 0, label: 'only-journalist',  }\n        { journalist: 0, developer: 100,  designer: 0, label: 'only-developer',  }\n        { journalist: 0, developer: 0,  designer: 100, label: 'only-designer',  }\n      ]\n    #.........................................................................................................\n    trace_1 =\n      type:   'scatterternary',\n      mode:   'markers+lines',\n      a:      rawData.map ( d ) -> d.journalist\n      b:      rawData.map ( d ) -> d.developer\n      c:      rawData.map ( d ) -> d.designer\n      text:   rawData.map ( d ) -> d.label\n      marker:\n        symbol: 100,\n        color: '#DB7365',\n        size: 14,\n        line: { width: 2 }\n    #.........................................................................................................\n    data = [ trace_1, ]\n    #.........................................................................................................\n    layout =\n      showlegend:   true\n      ternary:\n          sum: 100\n          aaxis: make_axis \"Journalist\",    0\n          baxis: make_axis \"\\nDeveloper\", +45\n          caxis: make_axis \"\\nDesigner\",  -45\n          bgcolor: '#fff1e0'\n      annotations: [{\n        showarrow:  false\n        text:       \"Replica of Tom Pearson's block\"\n        x:          1.0\n        y:          1.3\n        font:       { size: 15 }\n        }]\n      paper_bgcolor: '#fff1e0'\n    #.........................................................................................................\n    config =\n      displayModeBar:   true\n      staticPlot:       false\n      scrollZoom:       true\n      showLink:         true\n      responsive:       true\n      toImageButtonOptions:\n        format:           'png'\n        filename:         'custom_image',\n        height:           1200,\n        width:            1200,\n        scale:            2\n    #.........................................................................................................\n    plot data, layout, config\n    return null\n\n\n############################################################################################################\nprovide_plotter.apply globalThis.PLOTTER = {}\n"
  ]
}