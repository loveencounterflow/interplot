{
  "version": 3,
  "file": "demo-puppeteer.js",
  "sourceRoot": "../..",
  "sources": [
    "src/experiments/demo-puppeteer.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERPLOT/DEMO-PUPPETEER'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\nPATH                      = require 'path'\nFS                        = require 'fs'\n{ jr, }                   = CND\nassign                    = Object.assign\n#...........................................................................................................\nPD                        = require 'pipedreams'\n{ $\n  async }                 = PD\n#...........................................................................................................\nafter                     = ( dts, f ) -> setTimeout f, dts * 1000\npage_html_path            = PATH.resolve PATH.join __dirname, '../../public/main.html'\nPUPPETEER                 = require 'puppeteer'\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_1 = ->\n  urge \"µ29922-1 launching browser\"\n  browser = await PUPPETEER.launch()\n  urge \"µ29922-2 new page\"\n  page    = await browser.newPage()\n  urge \"µ29922-3 page goto\"\n  await page.goto 'https://de.wikipedia.org/wiki/Berlin', { waitUntil: 'networkidle2', }\n  urge \"µ29922-4 take PDF\"\n  await page.pdf  { path: 'page.pdf', format: 'A4', }\n  urge \"µ29922-5 close\"\n  await browser.close()\n  urge \"µ29922-6 done\"\n\n#-----------------------------------------------------------------------------------------------------------\nsettings =\n  puppeteer:\n    headless:           false\n    deviceScaleFactor:  2\n    args: [\n      '--disable-infobars' # hide 'Chrome is being controlled by ...'\n      '--no-first-run'\n      '--incognito'\n      # process.env.NODE_ENV === \"production\" ? \"--kiosk\" : null\n      '--allow-file-access-from-files'\n      '--no-sandbox'\n      '--disable-setuid-sandbox'\n      ]\n\n# #-----------------------------------------------------------------------------------------------------------\n# getImageContent = ( page, url ) =>\n#   frameId = String page.mainFrame()._id\n#   debug 'µ37744', 'frameId', rpr frameId\n#   debug 'µ37744', 'url', rpr url\n#   { content, base64Encoded } = await page._client.send 'Page.getResourceContent', { frameId, url }\n#   unless base64Encoded\n#     throw new Error \"µ34774\", 'expected base64Encoded'\n#   return content\n\n#-----------------------------------------------------------------------------------------------------------\ndemo_2 = ->\n  # Set up browser and page.\n  urge \"µ29923-1 launching browser\"\n  browser = await PUPPETEER.launch settings.puppeteer\n  urge \"µ29923-2 new page\"\n  page    = await browser.newPage()\n  page.setViewport { width: 1280, height: 926, }\n  page.on 'error', ( error ) => throw error\n  page.on 'console', ( c ) =>\n    if c._type is 'error'\n      warn 'µ37763', 'console:', c._text\n      process.exit 1\n      # throw new Error c._text\n    else\n      info 'µ37763', 'console:', c._text\n  # Navigate to this blog post and wait a bit.\n  urge \"µ29923-3-1 page goto\"\n  # await page.goto 'https://intoli.com/blog/saving-images/'\n  await page.goto 'file:///home/flow/io/interplot/public/main.html'\n  urge \"µ29923-4-2 page goto\"\n  await page.waitForSelector '#my_dataviz'\n  urge \"µ29923-5-3 page goto\"\n  # Select the #my_dataviz img element and save the screenshot.\n  svg_image = await page.$ '#my_dataviz'\n  urge \"µ29923-6 take screenshot\"\n  await svg_image.screenshot { path: 'logo-screenshot.png', omitBackground: false, }\n  # #.........................................................................................................\n  # try\n  #   urge \"µ29923-7 get SVG\"\n  #   url           = await page.evaluate => ( document.querySelector '#my_dataviz' ).src\n  #   content       = await getImageContent page, url\n  #   contentBuffer = Buffer.from content, 'base64'\n  #   fs.writeFileSync 'logo-extracted.svg', contentBuffer, 'base64'\n  # catch error\n  #   warn error\n  #.........................................................................................................\n  saveSvgAsPng ( document.getElementById '#my_dataviz' ), 'diagram.png'\n  #.........................................................................................................\n  urge \"µ29923-8 close\"\n  # after 0, => await browser.close()\n  urge \"µ29923-9 done\"\n\n\n\n############################################################################################################\nunless module.parent?\n  do =>\n    await demo_2()\n    help 'ok'\n\n\n\n"
  ]
}